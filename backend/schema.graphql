scalar Month
scalar Amount
scalar Date

type Category {
  id: ID!
  name: String!
  envelope: Envelope!
}
input CategoryInput {
  name: String!
  envelopeID: ID!
}
input CategoryUpdate {
  name: String
  envelopeID: ID
}

type Account {
  id: ID!
  name: String!
  balance: Amount!
}
input AccountInput {
  name: String!
}
input AccountUpdate {
  name: String
}

type Envelope {
  id: ID!
  name: String!
  balance: Amount!
  limit: Amount
}
input EnvelopeInput {
  name: String!
  limit: Amount
}
input EnvelopeUpdate {
  name: String
  limit: Amount
}

type Budget {
  id: ID!
  accounts: [Account!]!
  envelopes: [Envelope!]!
  categories: [Category!]!
  currentMonth: MonthlyReport!
}

type Plan {
  title: String
  fromEnvelope: Envelope!
  toEnvelope: Envelope!
  amount: Amount!
}
input PlanInput {
  title: String
  fromEnvelopeID: ID!
  toEnvelopeID: ID!
  amount: Amount!
}

type Transfer {
  title: String
  fromAccount: Account!
  toAccount: Account!
  amount: Amount!
}
input TransferInput {
  title: String
  fromAccountID: ID!
  toAccountID: ID!
  amount: Amount!
}

type Expense {
  title: String
  categories: [ExpenseCategory!]!
  account: Account!
  totalAmount: Amount!
  date: Date!
}
input ExpenseInput {
  title: String
  categories: [ExpenseCategoryInput!]!
  accountID: ID!
  totalAmount: Amount!
  date: Date!
}

type ExpenseCategory {
  category: Category!
  amount: Amount!
}
input ExpenseCategoryInput {
  categoryID: ID!
  amount: Amount!
}

type MonthlyReport {
  month: Month!
  plans: [Plan!]!
  expenses: [Expense!]!
  transfers: [Transfer!]!
}
input MonthlyReportInput {
  month: Month!
}

type Query {
  budget(id: ID!): Budget
  budgets: [Budget!]!
}

type Mutation {
  createBudget: Budget
  createAccount(budgetID: ID!, in: AccountInput!): Account
  updateAccount(budgetID: ID!, id: ID!, in: AccountUpdate!): Account
  createEnvelope(budgetID: ID!, in: EnvelopeInput!): Envelope
  updateEnvelope(budgetID: ID!, id: ID!, in: EnvelopeUpdate!): Envelope
  createCategory(budgetID: ID!, in: CategoryInput!): Category
  updateCategory(budgetID: ID!, id: ID!, in: CategoryUpdate!): Category
}

schema {
  query: Query
  mutation: Mutation
}
